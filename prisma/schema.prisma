<<<<<<< HEAD
=======

>>>>>>> 50deb1af6e9ea6480a47b99c817a5c399138bfb4
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
<<<<<<< HEAD
  id                String  @id @default(cuid())
=======
  id                String      @id @default(cuid())
>>>>>>> 50deb1af6e9ea6480a47b99c817a5c399138bfb4
  userId            String
  type              String
  provider          String
  providerAccountId String
<<<<<<< HEAD
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
=======
  refresh_token     String?    @db.Text
  access_token      String?    @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?    @db.Text
>>>>>>> 50deb1af6e9ea6480a47b99c817a5c399138bfb4
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
<<<<<<< HEAD
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
=======
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
>>>>>>> 50deb1af6e9ea6480a47b99c817a5c399138bfb4
  emailVerified DateTime?
  passwordHash  String
  image         String?
  accounts      Account[]
<<<<<<< HEAD
  member        Member?
}

model Member {
  id          String   @id @default(cuid())
  userId      String   @unique
  name        String
  gender      String
  dateOfBirth DateTime
  created     DateTime @default(now())
  updated     DateTime @default(now())
  description String
  city        String
  country     String
  image       String?
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  photos      Photo[]
}

model Photo {
  id       String  @id @default(cuid())
  url      String
  publicId String?

  memberId String
  member   Member @relation(fields: [memberId], references: [id], onDelete: Cascade)
}
=======
}
>>>>>>> 50deb1af6e9ea6480a47b99c817a5c399138bfb4
